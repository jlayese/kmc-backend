name: CI - Simple (No Docker)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --no-audit

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm test
      env:
        MONGODB_URI: mongodb://localhost:27017/kmc-backend-test
        NODE_ENV: test

    - name: Test application startup
      run: |
        # Test that the app can start and connect to MongoDB
        timeout 30s npm start &
        sleep 10
        curl -f http://localhost:5000/health || exit 1
        pkill -f "node server.js"
      env:
        MONGODB_URI: mongodb://localhost:27017/kmc-backend-test
        NODE_ENV: test
        PORT: 5000

    - name: Run security audit
      run: npm audit --audit-level=moderate || true

  build-test:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --no-audit

    - name: Test production build
      run: |
        # Simulate production environment
        export NODE_ENV=production
        export PORT=5000
        
        # Test that the app starts in production mode
        timeout 30s npm start &
        sleep 10
        curl -f http://localhost:5000/health || exit 1
        pkill -f "node server.js"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: production-ready-files
        path: |
          app/
          config/
          utils/
          package.json
          package-lock.json
          server.js 